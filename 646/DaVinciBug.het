library DaVinciBug
version 1.0

from DaVinciBug_Import get
		 Taxonomy, Partial_Order, Ext_Partial_Order,
         Ext_Overlap_or_Connection, Classical_Extensional_Parthood,
         Time_Mereology, Unary_Temporal_Dissective, Being_Present,
         Mereology, Mereology_and_TemporalPart, Binary_Present,
         Binary_Temporal_Dissective, Temporary_Partial_Order,
         Temporary_Strict_Partial_Order, Temporary_Parthood_No, Temporary_Parthood,
         Temporary_Mereology, Constitution_Spec,
         Constantly_Generically_Constituted, Constitution, Participation,
         Direct_Quality_Spec, Direct_Quality, Immediate_Quale_Spec,
         Immediate_Quale, Temporary_Quale_Spec, Temporary_Quale, 
         Specific_Dependence, Mutual_Specific_Dependence,
         OneSide_Specific_Dependence, Generic_Dependence,
         Mutual_Generic_Dependence, OneSide_Generic_Dependence, Dependence,
         Strongly_Non_Empty, Cumulative, Anti_Cumulative, Homeomerous,
         Anti_Homeomerous, Atomic, Anti_Atomic, PreDolce, Dolce


spec Temporary_Parthood_No_PRE =
  Temporary_Parthood_No
then
  forall t:T . exists x : s . PRE(x, t) 
end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (1) (T new)
%%One Point Model Found
spec TM_Cons=
     Time_Mereology
then
     . exists t:T . true  %% we need at least one time point
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% add a view to a model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (2,3,4) (TL new, TR new, TQ new)
spec ImmediateQuale_Cons=
     TM_Cons
     then %cons
     Immediate_Quale
end

%% We identify time points with temporal location; and temporal qualities with temporal regions
spec ImmediateQuale_Cons_Model = 
     TM_Cons
     then %cons
     free type TL ::= sort T
     pred ql(x:T;y:TL) <=> x=y
     free type TR ::= tr
     free type TQ ::= sort TR
%%     free type TQ ::= tq   %% ??? does it matter 
%%     free type TR ::= sort TQ
     pred ql(x:TR;y:TQ) <=> x=y
end 

view v_ImmediateQuale_Cons_Model :  
     ImmediateQuale_Cons to ImmediateQuale_Cons_Model
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.



%%%%%%%%%%%%%%%% 1 and 2 point models for temp parthood no existence %%%%%%%%%%%%%%%%

spec OnePointTempParthoodNoModel =
  TM_Cons
then
  free type s ::= ThePoint
  pred PRE (x:s;t:T) <=> true
%%  pred tDif (x,y,z:s) <=> false
  pred tOv (x,y:s;t:T) <=> true
  pred tP (x,y:s;t:T) <=> true
  pred tPP (x,y:s;t:T) <=> false
%%  pred tSum  (x,y,z:s) <=> true
end

view v_Temporary_Parthood_No_PRE_1 : 
		Temporary_Parthood_No_PRE to OnePointTempParthoodNoModel
%% view works

%%%%%%%%%%%%%%%%%

 spec TwoPointTempParthoodNoModel =
   TM_Cons
 then
   free type s ::= PointOne | PointTwo
   pred PRE (x:s;t:T) <=> true
   pred tOv (x,y:s;t:T) <=> x=y
   pred tP (x,y:s;t:T) <=> x=y
   pred tPP (x,y:s;t:T) <=> false
 end

		
view v_Temporary_Parthood_No_PRE_2 : 
		Temporary_Parthood_No_PRE to TwoPointTempParthoodNoModel
%% view works		
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (5) (SC new)
spec TempParthoodSC_Cons =
     TM_Cons
     then %cons
     Temporary_Parthood_No_PRE with s |-> SC
end

  
spec TempParthoodSC_Cons_Model =
     TM_Cons
then %def
     OnePointTempParthoodNoModel with sort s |-> SC
end

view v_TempParthoodSC_Cons_Model : 
     TempParthoodSC_Cons to TempParthoodSC_Cons_Model
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown. 
%% Green after Proof Automatic


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (6) (SAG new)
spec TempParthoodSAG_Cons=
     TM_Cons
     then %cons
     Temporary_Parthood_No_PRE with s |-> SAG
end

spec TempParthoodSAG_Cons_Model =
     TM_Cons
then %cons
     OnePointTempParthoodNoModel with sort s |-> SAG
end

view v_TempParthoodSAG_Cons_Model : 
     TempParthoodSAG_Cons to TempParthoodSAG_Cons_Model
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.
%% Green after Proof Automatic


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (7) (NASO new)
spec TempParthoodNASO_Cons=
     TempParthoodSC_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> NASO and
      OneSide_Generic_Dependence 
      with s1 |-> NASO, s2 |-> SC}
end

%% 
spec TempParthoodNASO_Cons_Model =
   	 TempParthoodSC_Cons
then %cons
     OnePointTempParthoodNoModel with sort s |-> NASO 
end

view v_TempParthoodNASO_Cons_Model : 
     TempParthoodNASO_Cons to TempParthoodNASO_Cons_Model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (8) (APO new)
spec TempParthoodAPO_Cons=
     TempParthoodSAG_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> APO 
      and
      OneSide_Generic_Dependence with s1 |-> SAG, 
      s2 |-> APO}
end

spec TempParthoodAPO_Cons_Model =
   	 TempParthoodSAG_Cons
then %cons
     {OnePointTempParthoodNoModel with sort s |-> APO}
end

view v_TempParthoodAPO_Cons_Model : 
     TempParthoodAPO_Cons to TempParthoodAPO_Cons_Model

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (9) (F new)
spec TempParthoodF_Cons=
     TempParthoodSAG_Cons
     then %cons
     Temporary_Parthood_No_PRE with s |-> F
end

spec TempParthoodF_Cons_Model =
   	 TempParthoodSAG_Cons
then %cons
     {OnePointTempParthoodNoModel with sort s |-> F}
end

view v_TempParthoodF_Cons_Model : 
     TempParthoodF_Cons to TempParthoodF_Cons_Model

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.
%% Green after proof automatic




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (10) (NAPO new)
spec TempParthoodNAPO_Cons=
     TempParthoodF_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> NAPO 
      and
      OneSide_Generic_Dependence with s1 |-> F, 
      s2 |-> NAPO}
end

spec TempParthoodNAPO_Cons_Model =
	 TempParthoodF_Cons
then %cons
     {OnePointTempParthoodNoModel with sort s |-> NAPO}
end

view v_TempParthoodNAPO_Cons_Model : 
     TempParthoodNAPO_Cons to TempParthoodNAPO_Cons_Model

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% view works, conservativity not shown.



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (11) (ASO new)
spec TempParthoodASO_Cons=
     TempParthoodSC_Cons
     and
     TempParthoodSAG_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> ASO
      and 
      {
       free type ASO ::= sort SC | sort SAG
      }
     }
end
%% 

spec TempParthoodASO_Cons_Model =
	 TempParthoodSC_Cons
     and
     TempParthoodSAG_Cons
	 then %cons
		%% abstract definition of predicates assuming (arbitrary) existing models	
     	free type ASO ::= sort SC | sort SAG
		pred PRE: ASO*T
   		pred tOv (x,y:ASO;t:T) <=> ( x in SC /\ y in SC /\ tOv(x,y,t) ) \/ ( x in SAG /\ y in SAG /\ tOv(x,y,t) ) 
   		pred tP (x,y:ASO;t:T) <=> ( x in SC /\ y in SC /\ tP(x,y,t) ) \/ ( x in SAG /\ y in SAG /\ tP(x,y,t) )
   		pred tPP (x,y:ASO;t:T) <=> ( x in SC /\ y in SC /\ tPP(x,y,t) ) \/ ( x in SAG /\ y in SAG /\ tPP(x,y,t) )
end

view v_TempParthoodASO_Cons_Model : 
     TempParthoodASO_Cons to TempParthoodASO_Cons_Model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%%
%% view not established



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (12) (MOB new)
spec TempParthoodMOB_Cons=
     TempParthoodAPO_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> MOB 
      and
      OneSide_Specific_Dependence with s1 |-> MOB, 
      s2 |-> APO}
end

spec TempParthoodMOB_Cons_Model =
	 TempParthoodAPO_Cons
then %cons
    {OnePointTempParthoodNoModel with sort s |-> MOB 
and 
	{esort MOB
	pred SD (x:MOB;y:APO) <=> true}
	}  
   	  
%% need to define predicate SD
end


view v_TempParthoodMOB_Cons_Model : 
     TempParthoodMOB_Cons to TempParthoodMOB_Cons_Model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%%
%%  OneSide_Specific_Dependence has 'experimental' changes in it.




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (13) (SOB new)
spec TempParthoodSOB_Cons=
     TempParthoodNASO_Cons
     and
     TempParthoodASO_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> SOB 
      and
      {
       free type SOB ::= sort ASO | sort NASO}
     }
end
  
spec TempParthoodSOB_Cons_Model =
	 TempParthoodNASO_Cons 
	 and
     TempParthoodASO_Cons
then %cons
     free type SOB ::= sort ASO | sort NASO
		pred PRE: SOB*T
   		pred tOv (x,y:SOB;t:T) <=> ( x in ASO /\ y in ASO /\ tOv(x,y,t) ) \/ ( x in NASO /\ y in NASO /\ tOv(x,y,t) ) 
   		pred tP (x,y:SOB;t:T) <=> ( x in ASO /\ y in ASO /\ tP(x,y,t) ) \/ ( x in NASO /\ y in NASO /\ tP(x,y,t) )
   		pred tPP (x,y:SOB;t:T) <=> ( x in ASO /\ y in ASO /\ tPP(x,y,t) ) \/ ( x in NASO /\ y in NASO /\ tPP(x,y,t) )
end
%%% Model used repeatedly, so could define a view as for one-point model?

view v_TempParthoodSOB_Cons_Model : 
     TempParthoodSOB_Cons to TempParthoodSOB_Cons_Model


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%%
%% view not established

%[	

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (14) (POB new)   
spec TempParthoodPOB_Cons=
     TempParthoodMOB_Cons
     and
     TempParthoodNAPO_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> POB
      and
      {
       free type POB ::= sort APO | sort NAPO
      }
     }
end


spec TempParthoodPOB_Cons_Model=
     TempParthoodMOB_Cons
     and
     TempParthoodNAPO_Cons
     then %cons
     {Temporary_Parthood_No_PRE with s |-> POB
      and
      {
       free type POB ::= sort APO | sort NAPO
      }
     }
end

view v_TempParthoodPOB_Cons_Model : 
     TempParthoodPOB_Cons to TempParthoodPOB_Cons_Model
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
%%
%%






%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (15) (NPOB new)   
spec TempParthoodNPOB_Cons=
     TempParthoodSOB_Cons
     and 
     TempParthoodMOB_Cons
     then %cons
     {Temporary_Parthood with s |-> NPOB
      and
      {
       free type NPOB ::= sort SOB | sort MOB
      }
     }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%
     
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (16) (M new)   
spec TempParthoodM_Cons=
     TempParthoodPOB_Cons
     then %cons
     {Temporary_Parthood with s |-> M}
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (17) (NPED new)   
spec TempParthoodNPED_Cons=
     TempParthoodNPOB_Cons
     then %cons
     {Temporary_Parthood with s |-> NPED
      and
      {
       esort NPOB < NPED
      }
     }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (18) (PED new)   
spec TempParthoodPED_Cons=
     TempParthoodM_Cons
     then %cons
     {Temporary_Parthood with s |-> PED
      and
      {
       free type PED ::= sort POB | sort M | sort F
      }
     }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (19) (ED new)   
spec TempParthoodED_Cons=
     TempParthoodPED_Cons
     and 
     TempParthoodNPED_Cons
     then %cons
     {Temporary_Parthood with s |-> ED
      and
      {
       esort AS;
       free type ED ::= sort PED | sort NPED | sort AS
      }
     } 
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (20) (AQ new)   
spec DependenceAQNPED_Cons=
     TempParthoodED_Cons
     then %cons
     Mutual_Specific_Dependence with s1 |-> AQ, 
				s2 |-> NPED
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (21) (PD new)   
spec ClassExtParthoodPD_Cons=
     TempParthoodED_Cons
     then %cons
     {Classical_Extensional_Parthood with s |-> PD}
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (22) (AR new)   
spec ClassExtParthoodAR_Cons=
     DependenceAQNPED_Cons
     then %cons
     Classical_Extensional_Parthood with s |-> AR
then
     . exists x:AR. x in AR
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%     
spec Particip_Cons=
     ClassExtParthoodPD_Cons
     then %cons
     Participation
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (23) (PQ new)   
spec DependencePQPED_Cons=
     TempParthoodED_Cons
     then %cons
     Mutual_Specific_Dependence with s1 |-> PQ, 
				s2 |-> PED 
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
spec DependenceTQPD_Cons=
     Particip_Cons
     and
     ImmediateQuale_Cons
     then %cons
     Mutual_Specific_Dependence with s1 |-> TQ, 
				s2 |-> PD
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (24,25) (Q new, EDorPDorQ new)   
spec BeingPresentEDorDP_Cons=
     DependenceTQPD_Cons
     and
     DependencePQPED_Cons
     and
     DependenceAQNPED_Cons
     then %cons
     {
      Being_Present with s |-> EDorPDorQ
      and
      {
       free type Q ::= sort TQ | sort PQ | sort AQ;
       free type EDorPDorQ ::= sort Q | sort PD | sort ED
      }
     }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (26,27) (SL new, S new)   
spec BinTempDisS_Cons=
     DependencePQPED_Cons
     then %cons
     Binary_Temporal_Dissective with s1 |-> S, 
				s2 |-> SL
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (28) (PR new)   
%% Model with PR 1 Element, PQ 1 Element exists
spec BinTempDisPR_Cons=
     Binary_Temporal_Dissective with s1 |-> PR, 
				s2 |-> PQ
     and 
     {
      esort S < PR
     }
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
spec ClassExtParthoodS_Cons=
      BinTempDisS_Cons
      then %cons
      Classical_Extensional_Parthood with s |-> S
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
spec BinTempDisAR_Cons=
     DependenceAQNPED_Cons
     and
     ClassExtParthoodAR_Cons
     then %cons
     Binary_Temporal_Dissective with s1 |-> AR, 
				s2 |-> AQ
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
spec ConstitutionPD_Cons=
     TempParthoodPED_Cons
     and 
     TempParthoodNPED_Cons
     and 
     Particip_Cons
     then %cons
     Constitution_Spec with s |-> PD
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec ConstitutionPED_Cons=
     TempParthoodPED_Cons
     and 
     TempParthoodNPED_Cons
     and 
     Particip_Cons
     then %cons
     {Constantly_Generically_Constituted with 
      s |-> PED, s1 |-> NAPO, s2 |-> M 	
      and  Constantly_Generically_Constituted with 
      s |-> PED, s1 |-> APO, s2 |-> NAPO}
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
spec ConstitutionNPED_Cons=
     TempParthoodPED_Cons
     and 
     TempParthoodNPED_Cons
     and 
     Particip_Cons
     then %cons
     Constantly_Generically_Constituted with 
     s |-> NPED, s1 |-> SC, s2 |-> SAG
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec Constitution_Cons=
     ConstitutionPD_Cons
     and
     ConstitutionPED_Cons
     and
     ConstitutionNPED_Cons
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec TempQualePR_Cons=
     BeingPresentEDorDP_Cons
     and
     BinTempDisS_Cons
     then %cons
     Temporary_Quale_Spec with s1 |-> PR, 
				s2 |-> PQ
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    
spec TempQualeAR_Cons=
     BeingPresentEDorDP_Cons
     and
     BinTempDisS_Cons
     then %cons   
     Temporary_Quale_Spec with s1 |-> AR, 
				s2 |-> AQ
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec TempQualeS_Cons=
     BeingPresentEDorDP_Cons
     and
     BinTempDisS_Cons
     then %cons 
     Temporary_Quale_Spec with s1 |-> S, s2 |-> SL
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec TempQuale_Cons=
     TempQualePR_Cons
     and
     TempQualeAR_Cons
     and
     TempQualeS_Cons
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec DirectQuality_Cons=
     BeingPresentEDorDP_Cons
     and
     BinTempDisS_Cons
     then %cons
     Direct_Quality
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
spec PreDolce_Cons=
     BeingPresentEDorDP_Cons
     and 
     Constitution_Cons
     and 
     DirectQuality_Cons
     and 
     TempQuale_Cons
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% (29-38) (PT, AB, R -- STV, ST, PRO -- EV, ACH, ACC)   
spec Dolce_Cons=
     PreDolce_Cons
     then %cons
     Taxonomy
end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%


]%